一：MySQL关系型数据库
    MySQL是一种中型的关系型数据库。MySQL就是一种DBMS(DataBase Management System)。
    安装MySQL数据库：
    第一步：sudo apt-get install mysql-server
    第二步：sudo apt-get install mysql-client
    第三步：sudo apt-get install libmysqlclient-dev

    进入MySQL环境：mysql -h mysql所在的主机 -u 用户名 -p

    常用的命令：
    1. show databases;    // 查看所有数据库
    2. use 数据库名;      // 进入指定的数据库
    3. show tables;       // 查看所有表名
    4. desc 表名称;       // 查看表结构

二：SQL（Structured Query Language）
    SQL ：结构化查询语言，是专门用来操作关系型数据库的语言。
    1. 创建数据库
       create database 数据库名 [default character set utf8]; 

    eg:创建名称为mydb的数据库:
       create database mydb default character set utf8;


    2. 创建表
       create table 表名称(
           字段名    字段类型   [约束],
           字段名    字段类型   [约束],
           ....
       );

    eg:创建student学生表:
       create table student(
       	   stuid   int   primary key  auto_increment,
           name   varchar(20)  not null,
           sex    char(10),
           score  double    not null
           );


    3. 插入记录
       方式一：
       insert into 表名称(字段名1,字段名2,...)values(值1,值2,...);

       eg:向student表中插入记录:
          insert into student(name,sex,score)values('风清扬','男',93.5);


       方式二：
       insert into 表名称 values(值1,值2,...);

       eg:向student表中插入记录:
          insert into student values(29,'岳不群','女',82.5);
 

       方式三（一条SQL插入多条记录）：
       insert into 表名称(字段名1,字段名2,...)values(值1,值2,...),(值1,值2,...),...;

       eg:向student表中插入记录:
          insert into student(name,sex,score)values('马云','男',76.5),('王健林','男',82),('李白','男',62);


       方式四（一条SQL插入多条记录，不指定字段）：
       insert into 表名称 values(值1,值2,...),(值1,值2,...),...;

       eg:向student表中插入记录:
          insert into student values(39,'令狐冲','男',88),(69,'隆美尔','男',81),(78,'黄蓉','女',86);   


    4. 修改记录
       update 表名称 set 字段名=值 [,字段名=字段值,...] [where 条件];

       eg:修改student表中的记录
          修改名字为“东方不败”的记录的成绩为89.8，性别改为“男”。
          update student set score=89.8,sex='男' where name='东方不败';


    5. 删除记录
       delete from 表名称 [where 条件];
       
       eg:删除名字为“东方不败”的记录:
          delete from student where name='东方不败';


    6. 查询记录
       select 字段名1,字段名2,... from 表名称 [where 条件];
       eg:查询性别为“男”的记录的姓名与成绩
          select name,score from student where sex='男';

       eg:查询成绩大于等于90分的男生的记录
          select * from student where score>=90 and sex='男';


    7. 删除表
       drop table 表名称;
       eg:删除student表
          drop table student;


    8. 删除数据库
       drop database 数据库名称;
       eg:删除mydb数据库
          drop database mydb;


三：排序查询
    select 字段名1,字段名2,... from 表名称 [where 条件] order by [字段名1,字段名2...]
    注意：默认按照升序排序，如果要按照某字段的降序排序，则要在字段名后添加desc。

    eg:按照成绩的升序排序
       select * from student order by score;

    eg:按照成绩的降序排序
       select * from student order by score desc;

    eg:先按照成绩降序排序，如果成绩相等，再按照学号降序排序
       select * from student order by score desc,stuid desc;


四：限制查询
    限制条数的查询:查询前n条记录
    select 字段名1,字段名2,... from 表名称 [where 条件] limit n;
    注意：n代表查询前n条记录。

    根据偏移量和条数查询记录
    select 字段名1,字段名2,... from 表名称 [where 条件] limit offset,n;
    注意: offset代表查询偏移量，偏移量从0开始(第一条记录)计算；
          n代表最多查询的条数。

    eg:查询前3条记录
       select * from student limit 3;

    eg:查询第3到第5条记录
       select * from student limit 2,3;

    分页查询：  
    如果每页最多显示pageSize条记录，当前页currentPage应该显示的记录为：
   select 字段名1,字段名2,... from 表名称 limit (currentPage-1)*pageSize,pageSize;

    eg:每页最多显示3条：
       第一页显示的表中记录为：
       select * from student limit 0,3;
       第二页显示的表中记录为：
       select * from student limit 3,3;
       第三页显示的表中记录为：
       select * from student limit 6,3;


补充：
1.查询当前所在的数据库
  select database();

2.给一个已存在的表添加字段
  alter table 表名称 add column 字段名 字段类型 [约束];

3.修改已存在表的字段
  alter table 表名称 modify column 字段名 字段类型 [约束];

4.删除表中的字段
  alter table 表名称 drop column 字段名; 



   


